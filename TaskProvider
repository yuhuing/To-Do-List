import 'package:flutter/material.dart';
import 'TaskModel.dart'; // Make sure this points to your Task class

class TaskProvider with ChangeNotifier {
  final Map<DateTime, List<Task>> _tasks = {};

  /// Adds a task to the specified date
  void addTask(Task task) {
    final key = DateTime(task.dueDate.year, task.dueDate.month, task.dueDate.day);
    _tasks.putIfAbsent(key, () => []).add(task);
    notifyListeners();
  }

  /// Gets all tasks for a specific date
  List<Task> getTasksFor(DateTime date) {
    final key = DateTime(date.year, date.month, date.day);
    return _tasks[key] ?? [];
  }

  /// Returns all tasks
  Map<DateTime, List<Task>> get allTasks => _tasks;

  /// Optionally: toggle task completion
  void toggleTaskDone(DateTime date, Task task) {
    final key = DateTime(date.year, date.month, date.day);
    final taskList = _tasks[key];

    if (taskList != null) {
      final index = taskList.indexOf(task);
      if (index != -1) {
        taskList[index].isDone = !taskList[index].isDone;
        notifyListeners();
      }
    }
  }

  /// Optionally: remove a task
  void removeTask(DateTime date, Task task) {
    final key = DateTime(date.year, date.month, date.day);
    _tasks[key]?.remove(task);
    notifyListeners();
  }
}
